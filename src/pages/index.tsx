import { Field, Form, Formik } from "formik";
import invariant from "tiny-invariant";
import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";
import { api } from "~/utils/api";

const initialData = {
  amount: "",
  type: undefined,
};

const CurrentBalance = () => {
  const { data } = api.movement.getBalance.useQuery();
  return data ? (
    <h1 className="text-2xl">
      Current balance: $ {(data._sum.amount as unknown as string) || 0}
    </h1>
  ) : null;
};

export default function Home() {
  const { isLoading, mutateAsync } = api.movement.create.useMutation();
  const { data: sessionData } = useSession();

  const handleSubmit = async (e: any) => {
    try {
      let amount = Number(e.amount);
      amount = e.type === "decrease" ? amount * -1 : amount;
      await mutateAsync({ amount });
    } catch (error) {
      console.error("error while sending expense", error);
    }
  };

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-full flex-col gap-4 bg-gradient-to-b from-[#2e026d] to-[#15162c] text-white">
        <header className="flex justify-end bg-slate-800 px-2 py-4">
          <button
            className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
            onClick={sessionData ? () => void signOut() : () => void signIn()}
          >
            {sessionData ? "Sign out" : "Sign in"}
          </button>
        </header>

        <CurrentBalance />

        <hr />

        <Formik initialValues={initialData} onSubmit={handleSubmit}>
          {({ isValidating, values }) => (
            <div>
              <Form className="flex flex-col gap-4">
                <label>
                  <span>Amount</span>
                  <div className="relative">
                    <span className="absolute left-0 text-black">$</span>
                    <Field
                      className="pl-4 text-black"
                      name="amount"
                      placeholder="420"
                      required
                      type="number"
                    />
                  </div>
                </label>

                <div className="flex gap-4">
                  <label
                    className={`select-none bg-slate-500 px-2 py-2 ${
                      values.type === "increase" && "bg-slate-600"
                    }`}
                  >
                    <Field
                      className="hidden"
                      type="radio"
                      name="type"
                      value="increase"
                    />
                    <span>Add +</span>
                  </label>
                  <label
                    className={`select-none bg-slate-500 px-2 py-2 ${
                      values.type === "decrease" && "bg-slate-600"
                    }`}
                  >
                    <Field
                      className="hidden"
                      type="radio"
                      name="type"
                      value="decrease"
                    />
                    <span>Remove -</span>
                  </label>
                </div>

                <div>
                  <button
                    disabled={isLoading || isValidating}
                    type="submit"
                    className="rounded bg-gray-500 px-2 py-2"
                  >
                    Send expense
                  </button>
                </div>
              </Form>
            </div>
          )}
        </Formik>
      </main>
    </>
  );
}
